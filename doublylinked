#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
    struct node *prev;
};
struct node *head,*tail;
int main()
{
    int ch;
   while(1)
   {
       
       printf("\n1.create\n2.insert beg\n3.insert end\n4.insertpos\n5.deletebeg\n6.deleteend\n7.display\n\n8.deletepos\n");
       printf("enter choice\n");
       scanf("%d",&ch);
       switch(ch)
       {
           case 1: create();
                    break;
            case 2: insertbeg();
                    break;
            case 3: insertend();
                    break;
            case 4: insertpos();
                    break;
            case 5: deletebeg();
                    break;
             case 6: deleteend();
                    break;       
            case 7: display();
                    break;
            case 8: deletepos();
                    break;
            case 9: exit(0);
                    break;
            default : printf("invalid option");
                   break;
       }
       
   }
}
void create()
{
    struct node *newnode;
    newnode=(struct node*)malloc(sizeof(struct node));
    scanf("%d",&newnode->data);
    newnode->next=0;
    newnode->prev=0;
    if(head==0)
    {
        head=newnode;
    }
}
void insertbeg()
{
    struct node *newnode;
    newnode=(struct node*)malloc(sizeof(struct node));
    scanf("%d",&newnode->data);
    newnode->next=0;
    newnode->prev=0;
    if(head==0)
    {
        head=newnode;
    }
    else
    {
        head->prev=newnode;
        newnode->next=head;
        head=newnode;
        
    }
}
void insertend()
{
    struct node *newnode,*temp;
    newnode=(struct node*)malloc(sizeof(struct node));
    scanf("%d",&newnode->data);
    newnode->next=0;
    newnode->prev=0;
    if(head==0)
    {
        head=newnode;
    }
    else
    {
        temp = head;  
          while(temp->next!=NULL)  
          {  
              temp = temp->next;  
          }  
          temp->next = newnode;  
          newnode ->prev=temp;  
         newnode->next = NULL;  
       }  
       
    
}
void insertpos()
{
    int pos,i=1;
    scanf("%d",&pos);
    if(pos==1)
    {
        insertbeg();
    }
    else
    {
        struct node *newnode,*temp;
        temp=head;
    newnode=(struct node*)malloc(sizeof(struct node));
    scanf("%d",&newnode->data);
    newnode->next=0;
    newnode->prev=0;
    while(i<pos-1)
    {
        temp=temp->next;
        i++;
    }
    newnode->prev=temp;
    newnode->next=temp->next;
    temp->next=newnode;
    newnode->next->prev=newnode;
    }
}
void deletebeg()
{
    struct node *temp;
    if(head==0)
    {
        printf("empty\n");
    }
    else
    {
        temp=head;
        head=head->next;
        head->prev=0;
        free(temp);
    }
}
void deleteend()
{
    struct node *temp;
    if(head==0)
    {                                                                           
        printf("empty\n");
    }
    else
    {
        temp=head;
        if(temp->next!=NULL)  
        {  
            temp=temp->next;   
        }  
        temp->prev->next=NULL; 
        temp=temp->prev;
        free(temp);  
    }
}
void display()
{
    struct node *temp1;
        temp1=head;

    while(temp1!=0)
    {
        printf("%d\t",temp1->data);
        temp1=temp1->next;
        
    }
}
void deletepos()
{
    int pos,i=1;
    struct node *temp;
    temp=head;
    scanf("%d",&pos);
    while(i<pos)
    {
        temp=temp->next;
        i++;
    }
    temp->prev->next=temp->next;
    temp->next->prev=temp->prev;
    free(temp);
}
        



